name: 🚀 CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  ci-and-format:
    name: 🧪 CI & Format
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v5

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint

      - name: 🔎 Type check
        run: npm run typecheck --if-present

      - name: 👔 Format
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository == 'mariehmai/homey-recipes'
        run: npm run format:repo

      - name: 💪 Commit formatting changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository == 'mariehmai/homey-recipes'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add .
          if [ -z "$(git status --porcelain)" ]; then
            echo "💿 no formatting changed"
            exit 0
          fi
          git commit -m "chore: format"
          git push
          echo "💿 pushed formatting changes https://github.com/$GITHUB_REPOSITORY/commit/$(git rev-parse HEAD)"

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: ci-and-format
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v5

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
